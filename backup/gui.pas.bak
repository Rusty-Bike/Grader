unit gui;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, RTTICtrls, Forms, Controls, Graphics, Dialogs,
  StdCtrls, ComCtrls, Spin, ExtCtrls, ExtDlgs, EditBtn, ButtonPanel, Grading;

type

  { TMainForm }

  TMainForm = class(TForm)
    Bevel: TBevel;
    Button1: TButton;
    HugeLabel: TLabel;
    GroupBox: TGroupBox;
    ItemsLabel: TLabel;
    HugeScaleLabel: TLabel;
    HugeEdit: TSpinEdit;
    TinyEdit: TSpinEdit;
    TinyLabel: TLabel;
    TinyScaleLabel: TLabel;
    PointsLabel: TLabel;
    NormalLabel: TLabel;
    EntireLabel: TLabel;
    ScoreLabel: TLabel;
    EntireScaleLabel: TLabel;
    NormalScaleLabel: TLabel;
    Panel: TPanel;
    PointsEdit: TSpinEdit;
    ItemsEdit: TSpinEdit;
    NormalEdit: TSpinEdit;
    EntireEdit: TSpinEdit;
    GradeScaleLabel: TStaticText;
    procedure FormCreate(Sender: TObject);
    procedure HugeEditChange(Sender: TObject);
    procedure NextButtonClick(Sender: TObject);
    procedure PanelClick(Sender: TObject);
    procedure PointsEditChange(Sender: TObject);
    procedure ItemsEditChange(Sender: TObject);
    procedure NormalEditChange(Sender: TObject);
    procedure EntireEditChange(Sender: TObject);
    procedure TinyEditChange(Sender: TObject);

  private
    { private declarations }
    Model: TModel;
    procedure UpdateView();
    procedure UpdateModel();
    procedure UpdateAll();
  public
    { public declarations }
  end;

var
  MainForm: TMainForm;

implementation

{$R *.lfm}

{ TMainForm }
procedure TMainForm.UpdateView();
var
  percent: double;
  points: double;
begin
    percent := 0;
    points := 0;

    if Model.result.percent >= 0 then
      percent := Model.result.percent;

    if Model.result.earned >= 0 then
      points := Model.result.earned;

    ScoreLabel.Caption := FormatFloat('####0.###', points) + ' / ' + IntToStr(Model.assignment.points) + ': ' + FormatFloat('####0.##', percent * 100) + '%';
    EntireScaleLabel.Caption := 'Entire: ' + FormatFloat('####0.###', Model.result.key.entire);
    HugeScaleLabel.Caption:= ' Huge: ' +  FormatFloat('####0.###', Model.result.key.huge);
    NormalScaleLabel.Caption := 'Normal: ' + FormatFloat('####0.###', Model.result.key.normal);
    TinyScaleLabel.Caption := ' Tiny: ' + FormatFloat('####0.###', Model.result.key.tiny);
end;

procedure TMainForm.UpdateModel();
begin
  Model.assignment.points  := PointsEdit.Value;
  Model.assignment.items   := ItemsEdit.Value;
  Model.mistakes.entire    := EntireEdit.Value;
  Model.mistakes.huge      := HugeEdit.Value;
  Model.mistakes.normal    := NormalEdit.Value;
  Model.mistakes.tiny      := TinyEdit.Value;
end;
procedure TMainForm.UpdateAll();
begin
  UpdateModel();
  model.result := grade(model.assignment, model.mistakes);
  UpdateView();
end;

procedure TMainForm.FormCreate(Sender: TObject);
begin
  UpdateAll();
end;

procedure TMainForm.HugeEditChange(Sender: TObject);
begin
  UpdateAll();
end;

procedure TMainForm.NextButtonClick(Sender: TObject);
begin
  EntireEdit.Value := 0;
  HugeEdit.Value := 0;
  NormalEdit.Value :=0;
  TinyEdit.Value :=0;

  UpdateAll();
end;

procedure TMainForm.PanelClick(Sender: TObject);
begin
  UpdateAll();
end;

procedure TMainForm.PointsEditChange(Sender: TObject);
begin
  UpdateAll();
end;

procedure TMainForm.ItemsEditChange(Sender: TObject);
begin
  UpdateAll();
end;

procedure TMainForm.NormalEditChange(Sender: TObject);
begin
  UpdateAll();
end;

procedure TMainForm.EntireEditChange(Sender: TObject);
begin
  UpdateAll();
end;

procedure TMainForm.TinyEditChange(Sender: TObject);
begin
  UpdateAll();
end;


end.

